Этот репозиторий создан участником JAVA школы 11го потока.
В этот документ будет добавляться информация по мере необходимости\выполнения заданий.

Задание1:
1) Сортировка пузырьком, бинарный поиск элемента в массиве
2) Конвертер температуры из Цельсия -> Фарингейт, Кельвин
3) Реализация иерархии объектов Circle, Rect, Triangle, Square (Liskov substitution principle)
Ссылка на задние: https://github.com/TredBoed/Task1SberTech

Задание2:
0) Имеется список парка машин Car(String model, String type). Необходимо разбить его на списки сгруппированные по type
[Исходные данные: текстовый файл со средней длиной строки равной 10 символам]
1) Подсчитайте количество различных слов в файле
2) Выведите на экран список различных слов файла, отсортированный по возрастанию их длины
3) Подсчитайте и выведите на экран сколько раз каждое слово встречается в файле
4) Выведите на экран все строки файла в обратном порядке
5) Реализуйте свой Iterator для обхода списка в обратном порядке
6) Выведите на экран строки, номера которых задаются пользователем в произвольном порядке
Ссылка на задние: https://github.com/TredBoed/Task2SberTech

Задание3:
1) Параметризовать CountMap (из репозитория https://github.com/sbtjavaschool/generics) и реализовать его
2) Параметризовать методы CollectionUtils, используя правило PECS, и реализовать их
Ссылка на задние: https://github.com/TredBoed/Task3SberTech

Задание4.1:
1) Реализовать свой итератор массива объектов. Написать тесты для проверки, оформить сборку через Maven.
Ссылка на задние: https://github.com/TredBoed/Task4.1SberTech

Задание5:
1) Реализовать интерфейс Terminal, с помощью которого можно: Проверить состояние счета, Снять/Положить деньги
Ссылка на задние: https://github.com/TredBoed/Task5SberTech

Задание6:
1) Имплементировать интерфейс в классе CalculatorImpl (Расчет факториала числа)
2) Вывести на консоль все методы класса, включая все родительские методы (включая приватные)
3) Вывести все геттеры класса
4) Проверить что все String константы имеют значение = их имени (public static final String MONDAY = "MONDAY")
5) Реализовать кэширующий прокси
6) Создать свою аннотацию Metric. Реализовать proxy класс PerformanceProxy, который в случае если метод аннотирован Metric будет выводить на консоль время выполнения метода.
7) Реализовать класс по документации
Ссылка на задние: https://github.com/TredBoed/Task6SberTech



